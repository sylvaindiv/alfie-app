import { createClient } from '@supabase/supabase-js';

const supabaseUrl = 'https://opcasadetsteifqyaeno.supabase.co';
const supabaseAnonKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im9wY2FzYWRldHN0ZWlmcXlhZW5vIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NjAyOTE2NTQsImV4cCI6MjA3NTg2NzY1NH0.Mlq7G4XHua6CHk8Gm8eyokMFUSLNLwxvR5JRAhUxZko';

const supabase = createClient(supabaseUrl, supabaseAnonKey);

/**
 * Script de migration one-time pour d√©finir la premi√®re photo de chaque entreprise
 * en utilisant l'URL du logo (logo_url ou logo_upload)
 */
async function migrateLogoToFirstPhoto() {
  console.log('üöÄ D√©but de la migration: Logo ‚Üí Premi√®re photo de la galerie\n');

  try {
    // 1. R√©cup√©rer toutes les entreprises
    console.log('üìã R√©cup√©ration de toutes les entreprises...');
    const { data: entreprises, error: entreprisesError } = await supabase
      .from('entreprises')
      .select('id, nom_commercial, logo_url, logo_upload');

    if (entreprisesError) {
      console.error('‚ùå Erreur lors de la r√©cup√©ration des entreprises:', entreprisesError);
      return;
    }

    console.log(`‚úÖ ${entreprises?.length || 0} entreprises trouv√©es\n`);

    if (!entreprises || entreprises.length === 0) {
      console.log('‚ö†Ô∏è  Aucune entreprise √† migrer');
      return;
    }

    let successCount = 0;
    let skipCount = 0;
    let errorCount = 0;

    // 2. Pour chaque entreprise
    for (const entreprise of entreprises) {
      console.log(`\nüè¢ Traitement: ${entreprise.nom_commercial}`);

      // D√©terminer l'URL du logo √† utiliser
      let logoUrl: string | null = null;

      if (entreprise.logo_upload) {
        // Si logo_upload existe, construire l'URL depuis Supabase Storage
        const { data } = supabase.storage
          .from('galerie')
          .getPublicUrl(entreprise.logo_upload);
        logoUrl = data.publicUrl;
        console.log(`  üì∏ Logo depuis Storage: ${entreprise.logo_upload}`);
      } else if (entreprise.logo_url) {
        // Sinon utiliser logo_url directement
        logoUrl = entreprise.logo_url;
        console.log(`  üîó Logo URL: ${entreprise.logo_url}`);
      } else {
        console.log(`  ‚è≠Ô∏è  Pas de logo - skip`);
        skipCount++;
        continue;
      }

      // 3. V√©rifier si l'entreprise a d√©j√† une premi√®re photo
      const { data: existingPhotos, error: photosError } = await supabase
        .from('entreprises_photos')
        .select('id, photo_url, ordre_affichage')
        .eq('entreprise_id', entreprise.id)
        .order('ordre_affichage', { ascending: true })
        .limit(1);

      if (photosError) {
        console.error(`  ‚ùå Erreur lors de la v√©rification des photos:`, photosError);
        errorCount++;
        continue;
      }

      if (existingPhotos && existingPhotos.length > 0) {
        // 4a. Si une premi√®re photo existe, la mettre √† jour
        const firstPhoto = existingPhotos[0];
        console.log(`  üîÑ Mise √† jour de la photo existante (ordre: ${firstPhoto.ordre_affichage})`);

        const { error: updateError } = await supabase
          .from('entreprises_photos')
          .update({ photo_url: logoUrl })
          .eq('id', firstPhoto.id);

        if (updateError) {
          console.error(`  ‚ùå Erreur lors de la mise √† jour:`, updateError);
          errorCount++;
          continue;
        }

        console.log(`  ‚úÖ Photo mise √† jour avec succ√®s`);
        successCount++;
      } else {
        // 4b. Si aucune photo n'existe, en cr√©er une nouvelle
        console.log(`  ‚ûï Cr√©ation d'une nouvelle photo (ordre: 1)`);

        const { error: insertError } = await supabase
          .from('entreprises_photos')
          .insert({
            entreprise_id: entreprise.id,
            photo_url: logoUrl,
            ordre_affichage: 1,
          });

        if (insertError) {
          console.error(`  ‚ùå Erreur lors de la cr√©ation:`, insertError);
          errorCount++;
          continue;
        }

        console.log(`  ‚úÖ Photo cr√©√©e avec succ√®s`);
        successCount++;
      }
    }

    // 5. R√©sum√© final
    console.log('\n' + '='.repeat(60));
    console.log('üìä R√âSUM√â DE LA MIGRATION');
    console.log('='.repeat(60));
    console.log(`‚úÖ Succ√®s:   ${successCount}`);
    console.log(`‚è≠Ô∏è  Skipped:  ${skipCount} (pas de logo)`);
    console.log(`‚ùå Erreurs:  ${errorCount}`);
    console.log(`üìù Total:    ${entreprises.length}`);
    console.log('='.repeat(60));

    if (errorCount === 0) {
      console.log('\nüéâ Migration termin√©e avec succ√®s !');
    } else {
      console.log('\n‚ö†Ô∏è  Migration termin√©e avec des erreurs');
    }

  } catch (error) {
    console.error('\nüí• Erreur critique:', error);
  }
}

// Ex√©cuter la migration
migrateLogoToFirstPhoto();
